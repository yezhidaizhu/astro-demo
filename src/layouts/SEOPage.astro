---
import i18n from "i18next";
import { getFixedT } from "i18next";

interface Props {
  seoI18nNamespace: string; // 获取 i18n 的空间命名
  canonicalConfig: {
    canonicalPath: string;
    hreflangUrl: {
      hreflang: string;
      href: string;
    }[];
  };
}

const { seoI18nNamespace, canonicalConfig } = Astro.props as Props;
const t = getFixedT(i18n.language, seoI18nNamespace);
---

<!doctype html>
<html lang={i18n.language}>
  <head>
    <meta charset="UTF-8" />
    <meta content="width=device-width" name="viewport" />
    <link href="/favicon.svg" rel="icon" type="image/svg+xml" />
    <meta content={Astro.generator} name="generator" />
    <title>{t("hero.title")}</title>
    <meta name="description" content={t("hero.description")} />
    <link rel="canonical" href={canonicalConfig.canonicalPath} />

    {
      canonicalConfig?.hreflangUrl?.map((item) => {
        return (
          <link rel="alternate" hreflang={item.hreflang} href={item.href} />
        );
      })
    }
  </head>
  <body>
    <slot />
  </body>
</html>
